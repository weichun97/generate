DROP TABLE IF EXISTS TL_TEMPLATE;
create table TL_TEMPLATE
(
    ID           BIGINT auto_increment
        primary key,
    NAME         VARCHAR(50)              not null,
    CREATE_TIME  TIMESTAMP WITH TIME ZONE not null,
    UPDATE_TIME  TIMESTAMP WITH TIME ZONE,
    DELETE_TIME  TIMESTAMP WITH TIME ZONE,
    CUSTOM_FIELD CLOB,
    BASE_DIR     VARCHAR(100),
    REMARK     VARCHAR(100)
);
comment on table TL_TEMPLATE is '模板组';
comment on column TL_TEMPLATE.NAME is '名称';
comment on column TL_TEMPLATE.CREATE_TIME is '创建时间';
comment on column TL_TEMPLATE.UPDATE_TIME is '更新时间';
comment on column TL_TEMPLATE.DELETE_TIME is '删除时间';
comment on column TL_TEMPLATE.CUSTOM_FIELD is '自定义字段';
comment on column TL_TEMPLATE.BASE_DIR is '基础文件夹';
comment on column TL_TEMPLATE.REMARK is '备注';

DROP TABLE IF EXISTS TL_TEMPLATE_DETAIL;
create table TL_TEMPLATE_DETAIL
(
    ID          BIGINT auto_increment
        primary key,
    NAME        VARCHAR(100)             not null,
    CONTENT     CLOB                     not null,
    FILE_NAME   VARCHAR(100)             not null,
    DIR         VARCHAR(200),
    TEMPLATE_ID BIGINT                   not null,
    DELETE_TIME TIMESTAMP WITH TIME ZONE,
    CREATE_TIME TIMESTAMP WITH TIME ZONE not null,
    UPDATE_TIME TIMESTAMP WITH TIME ZONE
);
comment on table TL_TEMPLATE_DETAIL is '模板详情';
comment on column TL_TEMPLATE_DETAIL.NAME is '模板名';
comment on column TL_TEMPLATE_DETAIL.CONTENT is '内容';
comment on column TL_TEMPLATE_DETAIL.FILE_NAME is '文件名';
comment on column TL_TEMPLATE_DETAIL.DIR is '目录';
comment on column TL_TEMPLATE_DETAIL.TEMPLATE_ID is '模板组id';
comment on column TL_TEMPLATE_DETAIL.DELETE_TIME is '删除时间';
comment on column TL_TEMPLATE_DETAIL.CREATE_TIME is '创建时间';
comment on column TL_TEMPLATE_DETAIL.UPDATE_TIME is '更新时间';

DROP TABLE IF EXISTS TL_DATASOURCE;
create table TL_DATASOURCE
(
    ID          BIGINT auto_increment,
    HOST        VARCHAR(50)              not null,
    PORT        INT                      not null,
    USERNAME    VARCHAR(50)              not null,
    PASSWORD    VARCHAR(100)             not null,
    DB_NAME     VARCHAR(50)              not null,
    DB_TYPE     INT                      not null,
    DEL_PREFIX  VARCHAR(100),
    CREATE_TIME TIMESTAMP WITH TIME ZONE not null,
    UPDATE_TIME TIMESTAMP WITH TIME ZONE,
    DELETE_TIME TIMESTAMP WITH TIME ZONE,
    constraint TL_DATASOURCE_PK
        primary key (ID)
);
comment on table TL_DATASOURCE is '数据源';
comment on column TL_DATASOURCE.ID is 'id';
comment on column TL_DATASOURCE.HOST is 'host';
comment on column TL_DATASOURCE.PORT is '端口号';
comment on column TL_DATASOURCE.USERNAME is '用户名';
comment on column TL_DATASOURCE.PASSWORD is '密码';
comment on column TL_DATASOURCE.DB_NAME is '数据库名';
comment on column TL_DATASOURCE.DB_TYPE is '数据库类型';
comment on column TL_DATASOURCE.DEL_PREFIX is '删除的表前缀';
comment on column TL_DATASOURCE.CREATE_TIME is '创建时间';
comment on column tl_datasource.update_time is '更新时间';
comment on column tl_datasource.delete_time is '删除时间';

insert into `tl_template`(`id`, `name`, `base_dir`, `custom_field`, `remark`, `create_time`, `update_time`, `delete_time`) values (1, 'demo-java', 'com/itran/fgoc/server/sys', '[{\"key\":\"author\",\"value\":\"chun\"}]', 'demo项目git地址:https://github.com/weichun97/web-template.git', '2022-12-21 18:05:12', null, null);
insert into `tl_template`(`id`, `name`, `base_dir`, `custom_field`, `remark`, `create_time`, `update_time`, `delete_time`) values (2, 'demo-vue-element', null, null, 'demo项目git地址:https://github.com/weichun97/vue-admin-template.git', '2022-12-21 18:05:41', null, null);

insert into `tl_template_detail`(`id`, `name`, `content`, `file_name`, `dir`, `template_id`, `delete_time`, `create_time`, `update_time`) values (1, 'po', 'package ${base.packagename};\r\n\r\n\r\nimport com.baomidou.mybatisplus.annotation.*;\r\nimport lombok.allargsconstructor;\r\nimport lombok.builder;\r\nimport lombok.data;\r\nimport lombok.noargsconstructor;\r\n\r\nimport java.util.date;\r\n\r\n@data\r\n@builder\r\n@tablename(\"${table.name}\")\r\n@noargsconstructor\r\n@allargsconstructor\r\npublic class ${table.nameuppercamel}entity {\r\n  \r\n  	<#list columns as column>\r\n    /**\r\n   	 * ${column.comment}\r\n   	 */\r\n    <#if column.primaryflag == 1>\r\n    @tableid<#if column.autoflag == 1>(type = idtype.auto)</#if>\r\n  	<#else>\r\n    @tablefield(value = \"${column.name}\"<#if column.name == \"create_time\">, fill = fieldfill.insert</#if><#if column.name == \"update_time\">, fill = fieldfill.update</#if>) \r\n  	</#if>\r\n  	<#if column.name == \"delete_time\">\r\n    @tablelogic(value = \"null\", delval = \"now()\")\r\n  	</#if>\r\n  	private ${column.boxtype} ${column.namelowercamel};\r\n  \r\n  	</#list>\r\n}\r\n', '${table.nameuppercamel}entity.java', '${base.basedir}/entity/po', 1, null, '2022-12-14 15:31:00', null);
insert into `tl_template_detail`(`id`, `name`, `content`, `file_name`, `dir`, `template_id`, `delete_time`, `create_time`, `update_time`) values (4, 'saveorupdateparam', 'package ${base.packagename};\r\n\r\nimport io.swagger.annotations.apimodel;\r\nimport io.swagger.annotations.apimodelproperty;\r\nimport lombok.data;\r\n\r\nimport java.util.date;\r\n\r\n@data\r\n@apimodel(\"${base.packagename}.${table.nameuppercamel}saveorupdateparam\")\r\npublic class ${table.nameuppercamel}saveorupdateparam {\r\n  \r\n  	<#list columns as column>\r\n    <#if column.name != \"id\" && column.name != \"create_time\" && column.name != \"update_time\" && column.name != \"delete_time\">\r\n    @apimodelproperty(value = \"${column.comment}\", example = \"\")\r\n  	private ${column.boxtype} ${column.namelowercamel};\r\n  \r\n    </#if>\r\n  	</#list>\r\n}\r\n', '${table.nameuppercamel}saveorupdateparam.java', '${base.basedir}/entity/param/${table.namelower}', 1, null, '2022-12-14 15:31:00', null);
insert into `tl_template_detail`(`id`, `name`, `content`, `file_name`, `dir`, `template_id`, `delete_time`, `create_time`, `update_time`) values (6, 'queryparam', 'package ${base.packagename};\r\n\r\nimport io.swagger.annotations.apimodel;\r\nimport io.swagger.annotations.apimodelproperty;\r\nimport lombok.data;\r\n\r\nimport java.util.date;\r\n\r\n@data\r\n@apimodel(\"${base.packagename}.${table.nameuppercamel}queryparam\")\r\npublic class ${table.nameuppercamel}queryparam {\r\n  \r\n  	<#list columns as column>\r\n    <#if column.name != \"id\" && column.name != \"create_time\" && column.name != \"update_time\" && column.name != \"delete_time\">\r\n    @apimodelproperty(value = \"${column.comment}\", example = \"\")\r\n  	private ${column.boxtype} ${column.namelowercamel};\r\n  \r\n    </#if>\r\n  	</#list>\r\n}', '${table.nameuppercamel}queryparam.java', '${base.basedir}/entity/param/${table.namelower}', 1, null, '2022-12-14 15:31:00', null);
insert into `tl_template_detail`(`id`, `name`, `content`, `file_name`, `dir`, `template_id`, `delete_time`, `create_time`, `update_time`) values (7, 'queryvo', 'package ${base.packagename};\r\n\r\nimport io.swagger.annotations.apimodel;\r\nimport io.swagger.annotations.apimodelproperty;\r\nimport lombok.data;\r\n\r\nimport java.util.date;\r\n\r\n@data\r\n@apimodel(\"${base.packagename}.${table.nameuppercamel}queryvo\")\r\npublic class ${table.nameuppercamel}queryvo {\r\n  \r\n  	<#list columns as column>\r\n    <#if column.name != \"update_time\" && column.name != \"delete_time\">\r\n    @apimodelproperty(value = \"${column.comment}\", example = \"\")\r\n  	private ${column.boxtype} ${column.namelowercamel};\r\n  \r\n    </#if>\r\n  	</#list>\r\n}\r\n', '${table.nameuppercamel}queryvo.java', '${base.basedir}/entity/vo/${table.namelower}', 1, null, '2022-12-14 15:31:00', null);
insert into `tl_template_detail`(`id`, `name`, `content`, `file_name`, `dir`, `template_id`, `delete_time`, `create_time`, `update_time`) values (9, 'dao', 'package ${base.packagename};\r\n\r\nimport com.baomidou.mybatisplus.core.mapper.basemapper;\r\nimport ${base.basepackagename}.entity.po.${table.nameuppercamel}entity;\r\nimport ${base.basepackagename}.entity.param.${table.namelower}.${table.nameuppercamel}queryparam;\r\nimport ${base.basepackagename}.entity.vo.${table.namelower}.${table.nameuppercamel}queryvo;\r\nimport com.itran.fgoc.common.mybatisplus.fgocpage;\r\nimport org.apache.ibatis.annotations.mapper;\r\nimport org.apache.ibatis.annotations.param;\r\n\r\n@mapper\r\npublic interface ${table.nameuppercamel}dao extends basemapper<${table.nameuppercamel}entity> {\r\n\r\n    /**\r\n     * 分页\r\n     */\r\n    fgocpage<${table.nameuppercamel}queryvo> query(fgocpage<${table.nameuppercamel}queryvo> fgocpage, @param(\"queryparam\") ${table.nameuppercamel}queryparam queryparam);\r\n}', '${table.nameuppercamel}dao.java', '${base.basedir}/entity/dao', 1, null, '2022-12-14 15:31:00', null);
insert into `tl_template_detail`(`id`, `name`, `content`, `file_name`, `dir`, `template_id`, `delete_time`, `create_time`, `update_time`) values (10, 'mapper', 'package ${base.packagename};\r\n\r\nimport ${base.basepackagename}.entity.po.${table.nameuppercamel}entity;\r\nimport ${base.basepackagename}.entity.param.${table.namelower}.${table.nameuppercamel}saveorupdateparam;\r\nimport org.mapstruct.mapper;\r\n\r\n@mapper(componentmodel = \"spring\")\r\npublic interface ${table.nameuppercamel}mapper {\r\n\r\n    ${table.nameuppercamel}entity saveorupdateparamtopo(${table.nameuppercamel}saveorupdateparam saveorupdateparam);\r\n}\r\n', '${table.nameuppercamel}mapper.java', '${base.basedir}/entity/mapper', 1, null, '2022-12-14 15:31:00', null);
insert into `tl_template_detail`(`id`, `name`, `content`, `file_name`, `dir`, `template_id`, `delete_time`, `create_time`, `update_time`) values (11, 'service', 'package ${base.packagename};\r\n\r\nimport com.baomidou.mybatisplus.extension.service.iservice;\r\nimport ${base.basepackagename}.entity.po.${table.nameuppercamel}entity;\r\nimport ${base.basepackagename}.entity.param.${table.namelower}.*;\r\nimport ${base.basepackagename}.entity.vo.${table.namelower}.${table.nameuppercamel}queryvo;\r\nimport com.itran.fgoc.common.mybatisplus.fgocpage;\r\nimport com.itran.fgoc.common.mybatisplus.pageparam;\r\n\r\npublic interface ${table.nameuppercamel}service extends iservice<${table.nameuppercamel}entity> {\r\n\r\n    /**\r\n     * ${table.comment}分页\r\n\r\n     * @param pageparam\r\n     * @param queryparam\r\n     * @return\r\n     */\r\n    fgocpage<${table.nameuppercamel}queryvo> query(pageparam pageparam, ${table.nameuppercamel}queryparam queryparam);\r\n\r\n    /**\r\n     * 保存${table.comment}\r\n     * @param saveorupdateparam\r\n     */\r\n    void save(${table.nameuppercamel}saveorupdateparam saveorupdateparam);\r\n\r\n    /**\r\n     * 更新${table.comment}\r\n     * @param id\r\n     * @param saveorupdateparam\r\n     */\r\n    void update(long id, ${table.nameuppercamel}saveorupdateparam saveorupdateparam);\r\n\r\n    /**\r\n     * 删除${table.comment}\r\n     * @param id\r\n     */\r\n    void remove(long id);\r\n}\r\n', '${table.nameuppercamel}service.java', '${base.basedir}/service', 1, null, '2022-12-14 15:31:00', null);
insert into `tl_template_detail`(`id`, `name`, `content`, `file_name`, `dir`, `template_id`, `delete_time`, `create_time`, `update_time`) values (12, 'serviceimpl', 'package ${base.packagename};\r\n\r\nimport ${base.basepackagename}.entity.po.${table.nameuppercamel}entity;\r\nimport ${base.basepackagename}.entity.mapper.${table.nameuppercamel}mapper;\r\nimport ${base.basepackagename}.entity.dao.${table.nameuppercamel}dao;\r\nimport ${base.basepackagename}.entity.param.${table.namelower}.*;\r\nimport ${base.basepackagename}.service.${table.nameuppercamel}service;\r\nimport ${base.basepackagename}.entity.vo.${table.namelower}.${table.nameuppercamel}queryvo;\r\nimport com.itran.fgoc.common.mybatisplus.fgocpage;\r\nimport com.itran.fgoc.common.mybatisplus.pageparam;\r\nimport com.baomidou.mybatisplus.core.conditions.query.lambdaquerywrapper;\r\nimport org.springframework.stereotype.service;\r\nimport com.baomidou.mybatisplus.extension.service.impl.serviceimpl;\r\nimport javax.annotation.resource;\r\n\r\n@service\r\npublic class ${table.nameuppercamel}serviceimpl extends serviceimpl<${table.nameuppercamel}dao, ${table.nameuppercamel}entity> implements ${table.nameuppercamel}service {\r\n\r\n    @resource\r\n    private ${table.nameuppercamel}mapper mapper;\r\n\r\n    @override\r\n    public fgocpage<${table.nameuppercamel}queryvo> query(pageparam pageparam, ${table.nameuppercamel}queryparam queryparam) {\r\n        return basemapper.query(fgocpage.getpage(pageparam), queryparam);\r\n    }\r\n\r\n    @override\r\n    public void save(${table.nameuppercamel}saveorupdateparam saveorupdateparam) {\r\n        save(mapper.saveorupdateparamtopo(saveorupdateparam));\r\n    }\r\n\r\n    @override\r\n    public void update(long id, ${table.nameuppercamel}saveorupdateparam saveorupdateparam) {\r\n        update(mapper.saveorupdateparamtopo(saveorupdateparam),\r\n                new lambdaquerywrapper<${table.nameuppercamel}entity>().eq(${table.nameuppercamel}entity::getid, id));\r\n    }\r\n\r\n    @override\r\n    public void remove(long id) {\r\n        removebyid(id);\r\n    }\r\n}\r\n', '${table.nameuppercamel}serviceimpl.java', '${base.basedir}/service/impl', 1, null, '2022-12-14 15:31:00', null);
insert into `tl_template_detail`(`id`, `name`, `content`, `file_name`, `dir`, `template_id`, `delete_time`, `create_time`, `update_time`) values (14, 'controller', 'package ${base.packagename};\r\n\r\nimport ${base.basepackagename}.entity.param.${table.namelower}.*;\r\nimport ${base.basepackagename}.entity.vo.${table.namelower}.${table.nameuppercamel}queryvo;\r\nimport ${base.basepackagename}.service.${table.nameuppercamel}service;\r\nimport com.itran.fgoc.common.core.api.response;\r\nimport com.itran.fgoc.common.mybatisplus.fgocpage;\r\nimport com.itran.fgoc.common.mybatisplus.pageparam;\r\nimport io.swagger.annotations.api;\r\nimport io.swagger.annotations.apioperation;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport javax.annotation.resource;\r\nimport javax.validation.valid;\r\n\r\n@api(value = \"${table.nameuppercamel}controller\", tags = \"${table.comment}\")\r\n@requestmapping(\"${table.namelowercamel}\")\r\n@restcontroller\r\npublic class ${table.nameuppercamel}controller {\r\n\r\n    @resource\r\n    private ${table.nameuppercamel}service ${table.namelowercamel}service;\r\n\r\n    @apioperation(\"${table.comment}列表分页\")\r\n    @getmapping(\"query\")\r\n    public response<fgocpage<${table.nameuppercamel}queryvo>> query(pageparam pageparam, ${table.nameuppercamel}queryparam ${table.namelowercamel}queryparam) {\r\n        return response.success(${table.namelowercamel}service.query(pageparam, ${table.namelowercamel}queryparam));\r\n    }\r\n\r\n    @apioperation(\"保存${table.comment}\")\r\n    @postmapping(\"save\")\r\n    public response save(@valid @requestbody ${table.nameuppercamel}saveorupdateparam saveorupdateparam){\r\n        ${table.namelowercamel}service.save(saveorupdateparam);\r\n        return response.success();\r\n    }\r\n\r\n    @apioperation(\"更新${table.comment}\")\r\n    @putmapping(\"update/{id}\")\r\n    public response update(@pathvariable long id, @valid @requestbody ${table.nameuppercamel}saveorupdateparam saveorupdateparam){\r\n        ${table.namelowercamel}service.update(id, saveorupdateparam);\r\n        return response.success();\r\n    }\r\n\r\n    @apioperation(\"删除${table.comment}\")\r\n    @deletemapping(\"remove/{id}\")\r\n    public response remove(@pathvariable long id){\r\n        ${table.namelowercamel}service.remove(id);\r\n        return response.success();\r\n    }\r\n}', '${table.nameuppercamel}controller.java', '${base.basedir}/controller', 1, null, '2022-12-14 15:31:00', null);
insert into `tl_template_detail`(`id`, `name`, `content`, `file_name`, `dir`, `template_id`, `delete_time`, `create_time`, `update_time`) values (15, 'daoxml', '<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!doctype mapper public \"-//mybatis.org//dtd mapper 3.0//en\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\r\n\r\n<mapper namespace=\"${base.basepackagename}.entity.dao.${table.nameuppercamel}dao\">\r\n\r\n    <select id=\"query\" resulttype=\"${base.basepackagename}.entity.vo.${table.namelower}.${table.nameuppercamel}queryvo\">\r\n        select t1.* from ${table.name} t1\r\n        <where>\r\n            t1.delete_time is null\r\n        </where>\r\n        order by id desc\r\n    </select>\r\n</mapper>', '${table.nameuppercamel}dao.xml', '${base.basedir}/entity/dao', 1, null, '2022-12-14 15:31:00', null);
insert into `tl_template_detail`(`id`, `name`, `content`, `file_name`, `dir`, `template_id`, `delete_time`, `create_time`, `update_time`) values (16, 'index', '<template>\r\n    <div class=\"app-container\">\r\n      <!-- 搜索 -->\r\n      <div class=\"filter-container\">\r\n        <el-input v-model=\"listparam.name\" placeholder=\"测试\" style=\"width: 200px;\" clearable class=\"filter-item\" />\r\n        <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handlefilter\">\r\n          查询\r\n        </el-button>\r\n        <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleresetquery\">\r\n          重置\r\n        </el-button>\r\n        <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handlecreate\">\r\n          新增\r\n        </el-button>\r\n      </div>\r\n  \r\n      <!-- 表格 -->\r\n      <el-table\r\n        v-loading=\"listloading\"\r\n        :data=\"list\"\r\n        element-loading-text=\"loading\"\r\n        border\r\n        fit\r\n        highlight-current-row\r\n      >\r\n        <el-table-column align=\"center\" label=\"序号\" width=\"95\">\r\n          <template slot-scope=\"scope\">\r\n            {{ scope.$index + 1 }}\r\n          </template>\r\n        </el-table-column>\r\n        <#list columns as column>\r\n        <#if column.name != \"id\" && column.name != \"create_time\" && column.name != \"update_time\" && column.name != \"delete_time\">\r\n        <#if column.basetype == \"date\">\r\n        <el-table-column\r\n          align=\"center\"\r\n          prop=\"${column.namelowercamel}\"\r\n          label=\"${column.comment}\"\r\n          width=\"200\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <i class=\"el-icon-time\" />\r\n            <span>{{ scope.row.${column.namelowercamel} }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <#else>\r\n        <el-table-column label=\"${column.comment}\">\r\n          <template slot-scope=\"scope\">\r\n            {{ scope.row.${column.namelowercamel} }}\r\n          </template>\r\n        </el-table-column>\r\n        </#if>\r\n        </#if>\r\n        </#list>\r\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"200\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              type=\"text\"\r\n              size=\"small\"\r\n              @click=\"handleedit(scope.row)\"\r\n            >编辑</el-button>\r\n            <el-button\r\n              type=\"text\"\r\n              size=\"small\"\r\n              @click=\"handledelete(scope.row)\"\r\n            >删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n  \r\n      <!-- 分页 -->\r\n      <pagination :total=\"total\" :page.sync=\"listparam.current\" :limit.sync=\"listparam.size\" @pagination=\"fetchdata\" />\r\n  \r\n      <!-- 新增更新弹框 -->\r\n      <el-dialog :title=\"saveorupdateformtitile\" :visible.sync=\"saveorupdateformvisible\">\r\n        <el-form\r\n          :ref=\"saveorupdateformref\"\r\n          :model=\"saveorupdateform\"\r\n          status-icon\r\n          :rules=\"saveorupdateformrules\"\r\n          label-width=\"100px\"\r\n        >\r\n        <#list columns as column>\r\n        <#if column.name != \"id\" && column.name != \"create_time\" && column.name != \"update_time\" && column.name != \"delete_time\">\r\n          <el-form-item label=\"${column.comment}\" prop=\"${column.namelowercamel}\">\r\n            <el-input\r\n              v-model=\"saveorupdateform.${column.namelowercamel}\"\r\n              type=\"text\"\r\n              autocomplete=\"off\"\r\n            />\r\n          </el-form-item>\r\n        </#if>\r\n        </#list> \r\n          <el-form-item>\r\n            <el-button\r\n              type=\"primary\"\r\n              :loading=\"saveorupdateloading\"\r\n              @click=\"saveorupdate${table.nameuppercamel}()\"\r\n            >提交</el-button>\r\n            <el-button @click=\"saveorupdateformvisible = false\">取消</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-dialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { query, save, update, remove } from ''@/api/${table.namelowercamel}''\r\n  import pagination from ''@/components/pagination''\r\n  import { showdeletedialog, showsuccessdialog } from ''@/utils/common''\r\n  \r\n  export default {\r\n    components: {\r\n      pagination\r\n    },\r\n    data() {\r\n      return {\r\n        // 分页\r\n        total: 0,\r\n        listparam: {\r\n          current: 1,\r\n          size: 10\r\n        },\r\n        list: [],\r\n        listloading: true,\r\n        // 新增、修改\r\n        saveorupdateloading: false,\r\n        saveorupdateformref: ''saveorupdateformref'',\r\n        saveorupdateformtitile: ''新增'',\r\n        saveorupdateformvisible: false,\r\n        updateid: null,\r\n        saveorupdateform: {\r\n          name: null\r\n        },\r\n        saveorupdateformrules: {\r\n          name: [\r\n            { required: true, message: ''请输入模板名'', trigger: ''blur'' },\r\n            { min: 1, max: 20, message: ''长度在 1 到 20 个字符'', trigger: ''blur'' }\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.fetchdata()\r\n    },\r\n    methods: {\r\n      // 分页\r\n      handlefilter() {\r\n        this.fetchdata()\r\n      },\r\n      handleresetquery() {\r\n        this.listparam = {\r\n          current: 1,\r\n          size: 10\r\n        }\r\n        this.fetchdata()\r\n      },\r\n      fetchdata() {\r\n        this.listloading = true\r\n        query(this.listparam).then((response) => {\r\n          this.list = response.data.records\r\n          this.total = response.data.total\r\n          this.listloading = false\r\n        })\r\n      },\r\n      // 新增、编辑\r\n      handleedit(row) {\r\n        this.saveorupdateformtitile = ''编辑''\r\n        this.updateid = row.id\r\n        this.saveorupdateform = object.assign({}, row)\r\n        this.saveorupdateformvisible = true\r\n      },\r\n      handlecreate() {\r\n        this.saveorupdateformtitile = ''新增''\r\n        this.updateid = null\r\n        this.saveorupdateform = {}\r\n        this.saveorupdateformvisible = true\r\n      },\r\n      update${table.nameuppercamel}() {\r\n        this.saveorupdateloading = true\r\n        update(this.saveorupdateform, this.updateid).then(() => {\r\n          this.saveorupdateform = {}\r\n          this.saveorupdateformvisible = false\r\n          this.fetchdata()\r\n          showsuccessdialog(this)\r\n          this.saveorupdateloading = false\r\n        }).catch(() => {\r\n          this.saveorupdateloading = false\r\n        })\r\n      },\r\n      save${table.nameuppercamel}() {\r\n        this.saveorupdateloading = true\r\n        save(this.saveorupdateform).then(() => {\r\n          this.saveorupdateform = {}\r\n          this.saveorupdateformvisible = false\r\n          this.fetchdata()\r\n          showsuccessdialog(this)\r\n          this.saveorupdateloading = false\r\n        }).catch(() => {\r\n          this.saveorupdateloading = false\r\n        })\r\n      },\r\n      saveorupdate${table.nameuppercamel}() {\r\n        this.$refs[this.saveorupdateformref].validate((valid) => {\r\n          if (valid) {\r\n            this.updateid == null ? this.save${table.nameuppercamel}() : this.update${table.nameuppercamel}()\r\n          }\r\n        })\r\n      },\r\n      // 删除\r\n      handledelete(row) {\r\n        showdeletedialog(this, () => {\r\n          remove(row.id).then(() => {\r\n            this.fetchdata()\r\n            showsuccessdialog(this)\r\n          })\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>', 'index.vue', 'views/${table.namelower}', 2, null, '2022-12-14 15:31:00', null);
insert into `tl_template_detail`(`id`, `name`, `content`, `file_name`, `dir`, `template_id`, `delete_time`, `create_time`, `update_time`) values (17, 'api', 'import request from ''@/utils/request''\r\n\r\nexport function query(params) {\r\n  return request({\r\n    url: ''/${table.namelowercamel}/query'',\r\n    method: ''get'',\r\n    params\r\n  })\r\n}\r\n\r\nexport function save(params) {\r\n  return request({\r\n    url: ''/${table.namelowercamel}/save'',\r\n    method: ''post'',\r\n    data: params\r\n  })\r\n}\r\n\r\nexport function update(params, id) {\r\n  return request({\r\n    url: `/${table.namelowercamel}/update/${r''${id}''}`,\r\n    method: ''put'',\r\n    data: params\r\n  })\r\n}\r\n\r\nexport function remove(id) {\r\n  return request({\r\n    url: `/${table.namelowercamel}/remove/${r''${id}''}`,\r\n    method: ''delete''\r\n  })\r\n}\r\n', '${table.namelowercamel}.js', 'api', 2, null, '2022-12-14 15:31:00', null);
insert into `tl_template_detail`(`id`, `name`, `content`, `file_name`, `dir`, `template_id`, `delete_time`, `create_time`, `update_time`) values (18, 'route', '{\r\n	path: ''${table.namelowerhyphen}'',\r\n	name: ''${table.nameuppercamel}'',\r\n	component: () => import(''@/views/${table.namelowercamel}/index''),\r\n	meta: { title: ''${table.comment}'', icon: ''table'' }\r\n}', '${table.namelowercamel}index.js', 'api/router', 2, null, '2022-12-14 15:31:00', null);


